{"version":3,"sources":["config/firebase.js","Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todos","todo","timestamp","edited","newTimestamp","React","useState","modalStyle","classes","open","setOpen","input","setInput","Modal","onClose","e","style","className","placeholder","value","onChange","target","Button","onClick","collection","doc","id","set","FieldValue","serverTimestamp","merge","Date","toDate","toLocaleTimeString","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","type","preventDefault","add","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1f22823.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB2hfvWQcZlM9VP6NN2RqhTtOZd5leSXlM\",\r\n  authDomain: \"todo-materialui.firebaseapp.com\",\r\n  projectId: \"todo-materialui\",\r\n  storageBucket: \"todo-materialui.appspot.com\",\r\n  messagingSenderId: \"720055630080\",\r\n  appId: \"1:720055630080:web:d4c96683f889265a649be5\",\r\n  measurementId: \"G-DQ0X3RX50M\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { auth, storage };\r\nexport default db;\r\n","import {\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport db from \"./config/firebase\";\r\nimport \"./Todo.css\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Todos({ todo, timestamp, edited, newTimestamp }) {\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const updateTodo = () => {\r\n    db.collection(\"todos\").doc(todo.id).set(\r\n      {\r\n        todo: input,\r\n        edited: true,\r\n        newTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      },\r\n      { merge: true }\r\n    );\r\n    // setEdited(true);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={(e) => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h1>Hey I am a Modal</h1>\r\n          <input\r\n            placeholder={todo.todo}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <Button onClick={updateTodo}>Update Todo</Button>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"todo__list\">\r\n        <div className='todo__values'>\r\n          <p>{todo.todo}</p>\r\n          <p>{new Date(timestamp?.toDate()).toLocaleTimeString()}</p>\r\n        </div>\r\n        {edited ? (\r\n          <div className=\"edited__box\">\r\n            <small className=\"edited__true\">Edited</small>\r\n            <span className=\"edited__timestamp\">\r\n              {new Date(newTimestamp?.toDate()).toLocaleTimeString()}\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Button onClick={(e) => db.collection(\"todos\").doc(todo.id).delete()}>\r\n          Delete Me\r\n        </Button>\r\n        <Button onClick={(e) => setOpen(true)}>Edit</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport db from \"./config/firebase\";\r\nimport firebase from \"firebase\";\r\nimport Todo from \"./Todo.jsx\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\"breakfast\", \"running\"]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    db.collection(\"todos\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setTodos(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            todo: doc.data().todo,\r\n            timestamp: doc.data().timestamp,\r\n            edited: doc.data().edited,\r\n            newTimestamp: doc.data().newTimestamp\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"todos\").add({\r\n      todo: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setTodos([...todos, input]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Todo App</h1>\r\n\r\n      <form>\r\n        <FormControl>\r\n          <InputLabel>Write a Todo</InputLabel>\r\n          <Input value={input} onChange={(e) => setInput(e.target.value)} />\r\n        </FormControl>\r\n        <Button\r\n          disabled={!input}\r\n          type=\"submit\"\r\n          onClick={addTodo}\r\n          variant=\"contained\"\r\n        >\r\n          Add Todo\r\n        </Button>\r\n      </form>\r\n\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <Todo\r\n            todo={todo}\r\n            timestamp={todo.timestamp}\r\n            edited={todo.edited}\r\n            newTimestamp={todo.newTimestamp}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}