{"version":3,"sources":["config/firebase.js","Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Todos","text","timestamp","List","className","ListItem","ListItemAvatar","ListItemText","primary","secondary","Date","toDate","toLocaleTimeString","App","useState","todos","setTodos","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","FormControl","InputLabel","Input","value","onChange","e","target","Button","disabled","type","onClick","preventDefault","add","todo","FieldValue","serverTimestamp","variant","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAeMA,EAFcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKMC,YAKRV,GAJFC,IAASU,OACNV,IAASW,UAGVZ,G,gDCAAa,MAXf,YAAqC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACrB,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAcC,QAASP,EAAMQ,UAAW,IAAIC,KAAJ,OAASR,QAAT,IAASA,OAAT,EAASA,EAAWS,UAAUC,6BCiD/DC,MAlDf,WACE,MAA0BC,mBAAS,CAAC,YAAa,YAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,qBAAU,WACRhC,EAAGiC,WAAW,SAASC,QAAQ,YAAa,OAAOC,YAAW,SAACC,GAC7DP,EAASO,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAEzC,IAeD,sBAAKvB,UAAU,MAAf,UACE,0CAEA,iCACE,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACC,EAAA,EAAD,CAAOC,MAAOd,EAAOe,SAAU,SAACC,GAAD,OAAOf,EAASe,EAAEC,OAAOH,aAE1D,cAACI,EAAA,EAAD,CACEC,UAAWnB,EACXoB,KAAK,SACLC,QAxBQ,SAACL,GACfA,EAAEM,iBAEFpD,EAAGiC,WAAW,SAASoB,IAAI,CACzBC,KAAMxB,EACNf,UAAWd,IAASS,UAAU6C,WAAWC,oBAG3C3B,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KACpBC,EAAS,KAgBH0B,QAAQ,YAJV,yBAUF,6BACG7B,EAAMU,KAAI,SAACgB,EAAMI,GAAP,OACT,cAAC,EAAD,CAAe5C,KAAMwC,EAAKA,KAAMvC,UAAWuC,EAAKvC,WAArC2C,YC5CNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3db5247.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB2hfvWQcZlM9VP6NN2RqhTtOZd5leSXlM\",\r\n  authDomain: \"todo-materialui.firebaseapp.com\",\r\n  projectId: \"todo-materialui\",\r\n  storageBucket: \"todo-materialui.appspot.com\",\r\n  messagingSenderId: \"720055630080\",\r\n  appId: \"1:720055630080:web:d4c96683f889265a649be5\",\r\n  measurementId: \"G-DQ0X3RX50M\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { auth, storage };\r\nexport default db;\r\n","import {\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nfunction Todos({ text, timestamp }) {\r\n  return (\r\n    <List className=\"todo__list\">\r\n      <ListItem>\r\n        <ListItemAvatar></ListItemAvatar>\r\n        <ListItemText primary={text} secondary={new Date(timestamp?.toDate()).toLocaleTimeString()} />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport db from \"./config/firebase\";\r\nimport firebase from \"firebase\";\r\nimport Todo from \"./Todo.jsx\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\"breakfast\", \"running\"]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    db.collection(\"todos\").orderBy('timestamp', 'asc').onSnapshot((snapshot) => {\r\n      setTodos(snapshot.docs.map((doc) => doc.data()));\r\n    });\r\n  }, []);\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"todos\").add({\r\n      todo: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setTodos([...todos, input]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo App</h1>\r\n\r\n      <form>\r\n        <FormControl>\r\n          <InputLabel>Write a Todo</InputLabel>\r\n          <Input value={input} onChange={(e) => setInput(e.target.value)} />\r\n        </FormControl>\r\n        <Button\r\n          disabled={!input}\r\n          type=\"submit\"\r\n          onClick={addTodo}\r\n          variant=\"contained\"\r\n        >\r\n          Add Todo\r\n        </Button>\r\n      </form>\r\n\r\n      <ul>\r\n        {todos.map((todo, id) => (\r\n          <Todo key={id} text={todo.todo} timestamp={todo.timestamp} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}